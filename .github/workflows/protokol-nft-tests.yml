name: NFT

on:
    push:
        branches:
            - "master"
            - "develop"
    pull_request:
        types: [ready_for_review, synchronize, opened]

jobs:
    unit:
        name: UNIT (API, CRYPTO, TRANSACTIONS) TESTS
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [12.x]

        steps:
            - name: Checkout Protokol NFT-CORE
              uses: actions/checkout@v2
              with:
                  repository: protokol/core-nft
                  ref: conf/nft-token-develop

            - name: Checkout protokol/nft-plugins
              uses: actions/checkout@v2
              with:
                  path: protokol/

            - name: Cache node modules
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install & Build
              run: yarn setup

            - name: TEST UNIT BASE-CRYPTO
              run: |
                  cd protokol/packages/nft-base-crypto
                  yarn test:unit:coverage --coverageDirectory .coverage/unit-base-crypto --maxWorkers=2

            - name: TEST UNIT BASE-TRANSACTIONS
              run: |
                  cd protokol/packages/nft-base-transactions
                  yarn test:unit:coverage --coverageDirectory .coverage/unit-base-transactions --maxWorkers=2

            - name: TEST UNIT EXCHANGE-CRYPTO
              run: |
                  cd protokol/packages/nft-exchange-crypto
                  yarn test:unit:coverage --coverageDirectory .coverage/unit-exchange-crypto --maxWorkers=2

            - name: TEST UNIT EXCHANGE-TRANSACTIONS
              run: |
                  cd protokol/packages/nft-exchange-transactions
                  yarn test:unit:coverage --coverageDirectory .coverage/unit-exchange-transactions --maxWorkers=2

            - name: TEST UNIT BASE-API
              run: |
                 cd protokol/packages/nft-base-api
                 yarn test:unit:coverage --coverageDirectory .coverage/unit-base-api --maxWorkers=2

            - name: TEST UNIT EXCHANGE-API
              run: |
                  cd protokol/packages/nft-exchange-api
                  yarn test:unit:coverage --coverageDirectory .coverage/unit-exchange-api --maxWorkers=2

    test-functional-base:
        name: BASE FUNCTIONAL TESTS
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]
        env:
            CORE_DB_DATABASE: ark_unitnet
            CORE_DB_USERNAME: ark
            POSTGRES_USER: ark
            POSTGRES_PASSWORD: password
            POSTGRES_DB: ark_unitnet

        steps:
            - name: Checkout Protokol NFT-CORE
              uses: actions/checkout@v2
              with:
                  repository: protokol/core-nft
                  ref: conf/nft-token-develop

            - name: Checkout protokol/nft-plugins
              uses: actions/checkout@v2
              with:
                  path: protokol/

            - name: Cache node modules
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: TEST FUNCTIONAL BASE-TRANSACTIONS
              run: |
                  cd protokol/packages/nft-base-transactions
                  yarn test:functional:coverage --coverageDirectory .coverage/functional-base

    test-exchange-functional:
        name: EXCHANGE FUNCTIONAL TESTS
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]
        env:
            CORE_DB_DATABASE: ark_unitnet
            CORE_DB_USERNAME: ark
            POSTGRES_USER: ark
            POSTGRES_PASSWORD: password
            POSTGRES_DB: ark_unitnet

        steps:
            - name: Checkout Protokol NFT-CORE
              uses: actions/checkout@v2
              with:
                  repository: protokol/core-nft
                  ref: conf/nft-token-develop

            - name: Checkout protokol/nft-plugins
              uses: actions/checkout@v2
              with:
                  path: protokol/

            - name: Cache node modules
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: TEST FUNCTIONAL EXCHANGE-TRANSACTIONS
              run: |
                  cd protokol/packages/nft-exchange-transactions
                  yarn test:functional:coverage --coverageDirectory .coverage/functional-exchange

    api-integration:
        name: INTEGRATION API TESTS
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: ark
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: ark_unitnet
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        strategy:
            matrix:
                node-version: [12.x]
        env:
            CORE_DB_DATABASE: ark_unitnet
            CORE_DB_USERNAME: ark
            POSTGRES_USER: ark
            POSTGRES_PASSWORD: password
            POSTGRES_DB: ark_unitnet

        steps:
            - name: Checkout Protokol NFT-CORE
              uses: actions/checkout@v2
              with:
                  repository: protokol/core-nft
                  ref: conf/nft-token-develop

            - name: Checkout protokol/nft-plugins
              uses: actions/checkout@v2
              with:
                  path: protokol/

            - name: Cache node modules
              uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: ${{ runner.os }}-yarn-

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Update system
              run: sudo apt-get update -y

            - name: Install and build packages
              run: yarn setup

            - name: Create .core/database directory
              run: mkdir -p $HOME/.core/database

            - name: TEST INTEGRATION BASE-API
              run: |
                  cd protokol/packages/nft-base-api
                  yarn test:integration:coverage --coverageDirectory .coverage/integration-base-api

            - name: TEST INTEGRATION EXCHANGE-API
              run: |
                  cd protokol/packages/nft-exchange-api
                  yarn test:integration:coverage --coverageDirectory .coverage/integration-exchange-api
