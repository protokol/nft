name: NFT-BASE-FUNCTIONAL-TESTS

on:
  push:
    branches:
      - "master"
      - "develop"
  pull_request:
    types: [ready_for_review, synchronize, opened]

jobs:
  functional-base-transactions-burn-single-passphrase:
    name: NFT-BURN-SINGLE-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: cd packages/nft-base-transactions && yarn test __tests__/functional/transaction-forging/nft-burn/single-passphrase.test.ts --forceExit

  functional-base-transactions-burn-second-passphrase:
    name: NFT-BURN-SECOND-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: cd packages/nft-base-transactions && yarn test __tests__/functional/transaction-forging/nft-burn/second-passphrase.test.ts --forceExit

  functional-base-transactions-burn-multi-signature:
    name: NFT-BURN-MULTI-SIGNATURE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: cd packages/nft-base-transactions && yarn test __tests__/functional/transaction-forging/nft-burn/multi-signature.test.ts --forceExit


  functional-base-transactions-create-single-passphrase:
    name: NFT-CREATE-SINGLE-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-create/single-passphrase.test.ts --forceExit

  functional-base-transactions-create-second-passphrase:
    name: NFT-CREATE-SECOND-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-create/second-passphrase.test.ts --forceExit

  functional-base-transactions-create-multi-signature:
    name: NFT-CREATE-MULTI-SIGNATURE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-create/multi-signature.test.ts --forceExit

  functional-base-transactions-register-single-passphrase:
    name: NFT-REGISTER-COLLECTION-SINGLE-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-register-collection/single-passphrase.test.ts --forceExit

  functional-base-transactions-register-second-passphrase:
    name: NFT-REGISTER-COLLECTION-SECOND-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-register-collection/second-passphrase.test.ts --forceExit

  functional-base-transactions-register-multi-signature:
    name: NFT-REGISTER-COLLECTION-MULTI-SIGNATURE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-register-collection/multi-signature.test.ts --forceExit

  functional-base-transactions-transfer-single-passphrase:
    name: NFT-TRANSFER-SINGLE-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-transfer/single-passphrase.test.ts --forceExit

  functional-base-transactions-transfer-second-passphrase:
    name: NFT-TRANSFER-SECOND-PASSPHRASE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-transfer/second-passphrase.test.ts --forceExit

  functional-base-transactions-transfer-multi-signature:
    name: NFT-TRANSFER-MULTI-SIGNATURE
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ark
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ark_unitnet
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        node-version: [ 12.x ]
    env:
      CORE_DB_DATABASE: ark_unitnet
      CORE_DB_USERNAME: ark
      POSTGRES_USER: ark
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ark_unitnet

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install and build packages
        run: yarn install --immutable --immutable-cache && yarn build

      - name: TEST
        run: |
          cd packages/nft-base-transactions
          yarn test __tests__/functional/transaction-forging/nft-transfer/multi-signature.test.ts --forceExit
